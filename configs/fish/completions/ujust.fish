function __fish_just_complete_recipes
    if string match -rq '(-f|--justfile)\s*=?(?<justfile>[^\s]+)' -- (string split -- ' -- ' (commandline -pc))[1]
        set -fx JUST_JUSTFILE "$justfile"
    end
    ujust --list 2>/dev/null | tail -n +2 | awk '{
        command = $1;
        args = $0;
        desc = "";
        delim = "";
        sub(/^[[:space:]]*[^[:space:]]*/, "", args);
        gsub(/^[[:space:]]+|[[:space:]]+$/, "", args);

        if (match(args, /#.*/)) {
          desc = substr(args, RSTART+2, RLENGTH);
          args = substr(args, 0, RSTART-1);
          gsub(/^[[:space:]]+|[[:space:]]+$/, "", args);
        }

        gsub(/\+|=[`\'"][^`\'"]*[`\'"]/, "", args);
        gsub(/ /, ",", args);

        if (args != ""){
          args = "Args: " args;
        }

        if (args != "" && desc != "") {
          delim = "; ";
        }

        print command "\t" args delim desc
  }'
end

# don't suggest files right off
complete -c ujust -n __fish_is_first_arg --no-files

# complete recipes
complete -c ujust -a '(__fish_just_complete_recipes)'

# autogenerated completions
complete -c ujust -l chooser -d 'Override binary invoked by `--choose`' -r
complete -c ujust -l color -d 'Print colorful output' -r -f -a "{auto\t'',always\t'',never\t''}"
complete -c ujust -l command-color -d 'Echo recipe lines in <COMMAND-COLOR>' -r -f -a "{black\t'',blue\t'',cyan\t'',green\t'',purple\t'',red\t'',yellow\t''}"
complete -c ujust -l dotenv-filename -d 'Search for environment file named <DOTENV-FILENAME> instead of `.env`' -r
complete -c ujust -s E -l dotenv-path -d 'Load <DOTENV-PATH> as environment file instead of searching for one' -r -F
complete -c ujust -l dump-format -d 'Dump justfile as <FORMAT>' -r -f -a "{json\t'',ujust\t''}"
complete -c ujust -s f -l justfile -d 'Use <JUSTFILE> as justfile' -r -F
complete -c ujust -l list-heading -d 'Print <TEXT> before list' -r
complete -c ujust -l list-prefix -d 'Print <TEXT> before each list item' -r
complete -c ujust -l set -d 'Override <VARIABLE> with <VALUE>' -r
complete -c ujust -l shell -d 'Invoke <SHELL> to run recipes' -r
complete -c ujust -l shell-arg -d 'Invoke shell with <SHELL-ARG> as an argument' -r
complete -c ujust -l timestamp-format -d 'Timestamp format string' -r
complete -c ujust -s d -l working-directory -d 'Use <WORKING-DIRECTORY> as working directory. --justfile must also be set' -r -F
complete -c ujust -s c -l command -d 'Run an arbitrary command with the working directory, `.env`, overrides, and exports set' -r
complete -c ujust -l completions -d 'Print shell completion script for <SHELL>' -r -f -a "{bash\t'',elvish\t'',fish\t'',nushell\t'',powershell\t'',zsh\t''}"
complete -c ujust -s l -l list -d 'List available recipes' -r
complete -c ujust -s s -l show -d 'Show recipe at <PATH>' -r
complete -c ujust -l check -d 'Run `--fmt` in \'check\' mode. Exits with 0 if justfile is formatted correctly. Exits with 1 and prints a diff if formatting is required.'
complete -c ujust -l clear-shell-args -d 'Clear shell arguments'
complete -c ujust -s n -l dry-run -d 'Print what ujust would do without doing it'
complete -c ujust -l explain -d 'Print recipe doc comment before running it'
complete -c ujust -s g -l global-justfile -d 'Use global justfile'
complete -c ujust -l highlight -d 'Highlight echoed recipe lines in bold'
complete -c ujust -l list-submodules -d 'List recipes in submodules'
complete -c ujust -l no-aliases -d 'Don\'t show aliases in list'
complete -c ujust -l no-deps -d 'Don\'t run recipe dependencies'
complete -c ujust -l no-dotenv -d 'Don\'t load `.env` file'
complete -c ujust -l no-highlight -d 'Don\'t highlight echoed recipe lines in bold'
complete -c ujust -l one -d 'Forbid multiple recipes from being invoked on the command line'
complete -c ujust -s q -l quiet -d 'Suppress all output'
complete -c ujust -l shell-command -d 'Invoke <COMMAND> with the shell used to run recipe lines and backticks'
complete -c ujust -l timestamp -d 'Print recipe command timestamps'
complete -c ujust -s u -l unsorted -d 'Return list and summary entries in source order'
complete -c ujust -l unstable -d 'Enable unstable features'
complete -c ujust -s v -l verbose -d 'Use verbose output'
complete -c ujust -l yes -d 'Automatically confirm all recipes.'
complete -c ujust -l changelog -d 'Print changelog'
complete -c ujust -l choose -d 'Select one or more recipes to run using a binary chooser. If `--chooser` is not passed the chooser defaults to the value of $JUST_CHOOSER, falling back to `fzf`'
complete -c ujust -l dump -d 'Print justfile'
complete -c ujust -s e -l edit -d 'Edit justfile with editor given by $VISUAL or $EDITOR, falling back to `vim`'
complete -c ujust -l evaluate -d 'Evaluate and print all variables. If a variable name is given as an argument, only print that variable\'s value.'
complete -c ujust -l fmt -d 'Format and overwrite justfile'
complete -c ujust -l groups -d 'List recipe groups'
complete -c ujust -l init -d 'Initialize new justfile in project root'
complete -c ujust -l man -d 'Print man page'
complete -c ujust -l summary -d 'List names of available recipes'
complete -c ujust -l variables -d 'List names of variables'
complete -c ujust -s h -l help -d 'Print help'
complete -c ujust -s V -l version -d 'Print version'

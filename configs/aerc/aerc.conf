#
# aerc main configuration
[ui]
index-columns = date<20,name<17,flags>4,subject<*
column-date = {{.DateAutoFormat .Date.Local}}
column-name = {{index (.From | names) 0}}
column-subject = {{.ThreadPrefix}}{{.Subject}}

#
# See time.Time#Format at https://godoc.org/time#Time.Format
#
# Default: 2006-01-02 03:04 PM (ISO 8601 + 12 hour time)
timestamp-format=2006-01-02 03:04 PM

#
# Width of the sidebar, including the border.
#
# Default: 20
sidebar-width=20

#
# Message to display when viewing an empty folder.
#
# Default: (no messages)
empty-message=(no messages)

# Message to display when no folders exists or are all filtered
#
# Default: (no folders)
empty-dirlist=(no folders)

# Enable mouse events in the ui, e.g. clicking and scrolling with the mousewheel
#
# Default: false
mouse-enabled=false

#
# Ring the bell when new messages are received
#
# Default: yes
new-message-bell=true

#
# Enable a threaded view of messages. If this is not supported by the backend (IMAP server or notmuch), threads will be built by the client.
#
#Default: false
threading-enabled=true

fuzzy-complete=true

# Describes the format string to use for the directory list
dirlist-left = {{.Folder}}
dirlist-right = {{if .Unread}}{{humanReadable .Unread}}/{{end}}{{if .Exists}}{{humanReadable .Exists}}{{end}}

# List of space-separated criteria to sort the messages by, see *sort*
# command in *aerc*(1) for reference. Prefixing a criterion with "-r "
# reverses that criterion.
#
# Example: "from -r date"
#
# Default: ""
sort=

# Moves to next message when the current message is deleted
#
# Default: false
next-message-on-delete=true

[viewer]
#
# Specifies the pager to use when displaying emails. Note that some filters
# may add ANSI codes to add color to rendered emails, so you may want to use a
# pager which supports ANSI codes.
#
# Default: less -R
pager=less -R

#
# If an email offers several versions (multipart), you can configure which
# mimetype to prefer. For example, this can be used to prefer plaintext over
# html emails.
#
# Default: text/plain,text/html
alternatives=text/plain,text/html

#
# Default setting to determine whether to show full headers or only parsed
# ones in message viewer.
#
# Default: false
show-headers=false

#
# Layout of headers when viewing a message. To display multiple headers in the
# same row, separate them with a pipe, e.g. "From|To". Rows will be hidden if
# none of their specified headers are present in the message.
#
# Default: From|To,Cc|Bcc,Date,Subject
header-layout=From|To,Cc|Bcc,Date,Subject

# Whether to always show the mimetype of an email, even when it is just a single part
#
# Default: false
always-show-mime=false

# How long to wait after the last input before auto-completion is triggered.
#
# Default: 250ms
completion-delay=250ms

#
# Global switch for completion popovers
#
# Default: true
completion-popovers=true

[compose]
#
# Specifies the command to run the editor with. It will be shown in an embedded
# terminal, though it may also launch a graphical window if the environment
# supports it. Defaults to $EDITOR, or vi.
editor=hx

#
# Default header fields to display when composing a message. To display
# multiple headers in the same row, separate them with a pipe, e.g. "To|From".
#
# Default: To|From,Subject
header-layout=To|From,Cc,Bcc,Subject

#
# Specifies the command to be used to tab-complete email addresses. Any
# occurrence of "%s" in the address-book-cmd will be replaced with what the
# user has typed so far.
#
# The command must output the completions to standard output, one completion
# per line. Each line must be tab-delimited, with an email address occurring as
# the first field. Only the email address field is required. The second field,
# if present, will be treated as the contact name. Additional fields are
# ignored.
# address-book-cmd=goobook query -s '%s'

[filters]
#
# Filters allow you to pipe an email body through a shell command to render
# certain emails differently, e.g. highlighting them with ANSI escape codes.
#
# The commands are invoked with sh -c. The following folders are appended to
# the system $PATH to allow referencing filters from their name only:
#
#   ${XDG_CONFIG_HOME:-~/.config}/aerc/filters
#   ${XDG_DATA_HOME:-~/.local/share}/aerc/filters
#   $PREFIX/share/aerc/filters
#   /usr/share/aerc/filters
#
# The following variables are defined in the filter command environment:
#
#   AERC_MIME_TYPE      the part MIME type/subtype
#   AERC_FORMAT         the part content type format= parameter
#   AERC_FILENAME       the attachment filename (if any)
#   AERC_SUBJECT        the message Subject header value
#   AERC_FROM           the message From header value
#
# The first filter which matches the email's mimetype will be used, so order
# them from most to least specific.
#
# You can also match on non-mimetypes, by prefixing with the header to match
# against (non-case-sensitive) and a comma, e.g. subject,text will match a
# subject which contains "text". Use header,~regex to match against a regex.
#
text/plain=colorize
text/calendar=calendar
message/delivery-status=colorize
message/rfc822=colorize
text/html=pandoc -f html -t plain | colorize
#text/html=html | colorize
text/*=bat -fP --file-name="$AERC_FILENAME"
application/x-sh=bat -fP -l sh
#image/*=catimg -w $(tput cols) -

[hooks]
mail-received = notify-send "New email from $AERC_FROM_NAME" "$AERC_SUBJECT"<Enter>

[templates]
# Templates are used to populate email bodies automatically.
#

# The directories where the templates are stored. It takes a colon-separated
# list of directories.
#
# default: /usr/local/share/aerc/templates/
template-dirs=/usr/local/share/aerc/templates/

# The template to be used for quoted replies.
#
# default: quoted_reply
quoted-reply=quoted_reply

# The template to be used for forward as body.
#
# default: forward_as_body
forwards=forward_as_body
